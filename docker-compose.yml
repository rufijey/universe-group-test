
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-events}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      retries: 5

  migrator:
    build:
      context: .
      dockerfile: libs/prisma/Dockerfile
    command: npx prisma migrate deploy
    environment:
      NODE_ENV: ${NODE_ENV}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy

  nats:
    image: nats:2.10
    command: -js -m 8222
    ports:
      - "4222:4222"
      - "8222:8222"
    volumes:
      - nats-data:/tmp/nats/jetstream

  publisher:
    image: andriiuni/events
    platform: linux/arm64
    environment:
      EVENT_ENDPOINT: ${EVENT_ENDPOINT:-http://gateway:3000/webhook}
    depends_on:
      gateway:
        condition: service_started
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - gateway
      - fb-collector
      - ttk-collector
      - reporter

  grafana:
    image: grafana/grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-provisioning:/etc/grafana/provisioning
      - ./monitoring/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - PROMETHEUS_URL=http://prometheus:9090
    ports:
      - "3001:3000"
    depends_on:
      - prometheus

volumes:
  pgdata:
  nats-data:
  grafana-data:
